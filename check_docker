#!/bin/bash

# TODO
# - check response code 200/500
# - check id is has root permission
# - return data as performance data

STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

NC="/bin/nc"
ECHO="/bin/echo"

PROGNAME=`/usr/bin/basename $0`
PROGPATH=`$ECHO $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION="0.0.1"


print_usage() {
    $ECHO "Usage: $PROGNAME [-H|--host <host>] [-p|--port <port>]"
    $ECHO "Usage: $PROGNAME [-f <socket_file>]"
    $ECHO -e "Usage: $PROGNAME [-h|--help] [-?] [-V|--version]\n"
}

print_help() {
    $ECHO -e "$PROGNAME $REVISION \n"
    print_usage
    $ECHO -e "Docker plugin for Nagios \n"
}

# defaults
NC_OPTS="-U /var/run/docker.sock"
PORT=4243
HOST="localhost"

## main ##

# necessary? detects for a speicfic user (root? nagios?)
# or do we expect docker users to allow anyone to call the remote API (security implications)

if [ `id -u` -ne 0 ]; then
    $ECHO "non-root user detected. please run this script as root."
    exit $STATE_WARNING
fi

# parse arguments

while test -n "$1"; do
    case "$1" in
        # -V|--version
        -V)
            $ECHO $REVISION
            exit $STATE_OK
            ;;
        --version)
            $ECHO $REVISION
            exit $STATE_OK
            ;;
        # -h|--help
        -h)
            print_help
            exit $STATE_OK
            ;;
        --help)
            print_help
            exit $STATE_OK
            ;;
        # -? for usage
        "-?")
            print_usage
            exit $STATE_OK
            ;;
        # -f <socket_file>
        -f)
            shift
            NC_OPTS="-U $1"
            if [ ! -e $1 ]; then
                $ECHO "ERROR: Socket file not found..."
                exit $STATE_CRITICAL
            fi
            ;;
        # -H|--host <hostname>
        -H)
            shift
            HOST=$1
            NC_OPTS="$HOST $PORT"
            ;;
        --host)
            shift
            HOST=$1
            NC_OPTS="$HOST $PORT"
            ;;
        # -p | --port <port>
        -p)
            shift
            PORT=$1
            NC_OPTS="$HOST $PORT"
            ;;
        --port)
            shift
            PORT=$1
            NC_OPTS="$HOST $PORT"
            ;;
        *)
            $ECHO "ERROR: Unknown argument: $1"
            print_usage
            exit $STATE_UNKNOWN
            ;;
    esac
    shift
done

# make request to socket (or to tcp netaddr)
# not able to easily retrieve response status_code

REQUEST="GET /info HTTP/1.1\r\n"
$ECHO -e $REQUEST | $NC $NC_OPTS
RC=$?

if [ $RC -ne 0 ]; then
    $ECHO "ERROR: request '${REQUEST}' -- returned $RC"
    exit $RC
fi

